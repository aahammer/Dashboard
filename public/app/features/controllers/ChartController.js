// Generated by CoffeeScript 1.7.1
(function() {
  define(['d3', 'angular'], function(d3, angular) {
    return function($settings) {
      var ChartController;
      ChartController = function($rootScope, $scope, $window, rs, DataService, $settings) {

        /* STARTUP CODE */
        var categoryScale, data, frame, id, render, renderAxis, svg, valueScale;
        id = $settings.id;
        $scope.id = id;
        $rootScope[id] = {};
        svg = d3.select("#" + id).append('svg').attr('width', $settings.frame.width).attr('height', $settings.frame.height);
        frame = angular.element("#" + id);
        data = [
          {
            average: 59,
            questions: 'Shit'
          }, {
            average: 87,
            questions: 'Holy'
          }, {
            average: 43,
            questions: 'Is'
          }, {
            average: 100,
            questions: 'It'
          }, {
            average: 88,
            questions: 'ForReal'
          }
        ];
        valueScale = d3.scale.linear().domain([0, 100]).range([0, frame.width() - $settings.frame.margin.left - $settings.frame.margin.right]);
        categoryScale = d3.scale.ordinal().domain(['Shit', 'Holy', 'Is', 'It', 'ForReal']).rangeRoundBands([0, frame.height() - $settings.frame.margin.top - $settings.frame.margin.bottom], 0.5, 0.25).rangeRoundBands([0, frame.height() - $settings.frame.margin.top - $settings.frame.margin.bottom], 0.5, 0.25);
        rs.renderBars(svg.append('g').attr('transform', 'translate(' + $settings.frame.margin.left + ',' + $settings.frame.margin.top + ')'), data, 'average', valueScale, id, categoryScale, {
          selector: id + '.bar',
          layout: 'horizontal',
          max: 10
        });

        /* Interface */
        renderAxis = function() {
          var x_axis, x_axis_g, y_axis, y_axis_g;
          x_axis_g = svg.append('g').attr('transform', rs._translate($settings.frame.margin.left, frame.height() - $settings.frame.margin.bottom));
          x_axis = d3.svg.axis().scale(valueScale).orient('bottom');
          x_axis_g.call(x_axis);
          y_axis_g = svg.append('g').attr('transform', rs._translate($settings.frame.margin.left, $settings.frame.margin.top));
          y_axis = d3.svg.axis().scale(categoryScale).orient('left');
          return y_axis_g.call(y_axis);
        };
        render = function() {};

        /* RUNTIME ACTIONS */
        $scope.$watch((function() {
          return $window.innerWidth;
        }), (function(newVal, oldVal) {}), true);
        $scope.$watch((function() {
          return DataService.dataPoint[id];
        }), (function(newVal, oldVal) {
          renderAxis();
        }), true);
      };
      return ['$rootScope', '$scope', '$window', 'RenderService', 'DataService', $settings, ChartController];
    };
  });

}).call(this);

//# sourceMappingURL=ChartController.map
